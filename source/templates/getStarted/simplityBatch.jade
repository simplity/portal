include ../header
script(src='../../js/home.js')
div.downloadsContainer
  div.downloadsInnerContainer
    div.downloadsHeader Simplity with Batch
    div.downloadsDesc You can get started with simplity in various ways.
    div.line
    div.releaseContainer
      div.accordian 
        div.accordianName Steps to implement batch in Simplity
      div.releaseInnerContainer
        div.releaseList1 1. Get simplity kernel
        div.line
        div.stable For Maven users-
        ul.codeoptions
          button.copyCode(onclick="toClipboard('dependency1')") copy code
        div.box
          div.dependency#dependency1 &lt;dependency&gt; </br>&lt;groupId&gt;org.simplity&lt;groupId&gt; </br>&lt;artifactIdId&gt;simplity&lt;/artifactId&gt;</br>&lt;version&gt;1.2&lt;/version&gt;</br>&lt;/dependency&gt;
        </br>
        div.stable Plain Java-
        ul.codeoptions
          button.copyCode(onclick="toClipboard('dependency2')") copy code
        div.box
          div.dependency#dependency2 &lt;dependency&gt; </br>&lt;groupId&gt;org.simplity&lt;/groupId&gt; </br>&lt;artifactIdId&gt;simplity&lt;/artifactId&gt;</br>&lt;version&gt;1.2&lt;/version&gt;</br>&lt;/dependency&gt;
        div.releaseList1 2. Creating project
        div.line
        ul.creationSteps
          li Create a new "Maven Project" in eclipse
          li Configure web.xml to have the following entry
            div
              div.stable1    
              ul.codeoptions1
                button.copyCode(onclick="toClipboard('webxml')") copy code
              div.boxcustom#webxml
                &lt;servlet&gt;</br>&nbsp;&nbsp;&lt;servlet-name&gt;SimplityStartup&lt;/servlet-name&gt;</br>&nbsp;&nbsp;&lt;servlet-class&gt;org.simplity.http.Startup&lt;/servlet-class&gt;</br>&nbsp;&nbsp;&lt;load-on-startup&gt;1&lt;/load-on-startup&gt;</br>&lt;/servlet&gt;</br>&lt;servlet&gt;</br>&nbsp;&nbsp;&lt;servlet-name&gt;s&lt;/servlet-name&gt;</br>&nbsp;&nbsp;&lt;servlet-class&gt;org.simplity.http.Serve&lt;/servlet-class&gt;</br>&lt;/servlet&gt;</br>&lt;servlet-mapping&gt;</br>&nbsp;&nbsp;&lt;servlet-name&gt;s&lt;/servlet-name&gt;</br>&nbsp;&nbsp;&lt;url-pattern&gt;*._s&lt;/url-pattern&gt;</br> &lt;/servlet-mapping&gt;</br></br>
        
        div.releaseList1 3. Application Configuration
        div.line
        ul.creationSteps
          li Create component folder structure under WEB-INF as follows:
            div.boxcustom
              <ul><li>comp<ul><li>batch</li><li>dt</li><li>msg</li><li>rec</li><li>service<ul style='list-style-type:circle'><li>tp</li></ul></li><li>sql</li></ul></li></ul></br>
          li Configure application.xml under comp as follows.
              div.stable1  
              ul.codeoptions1
                button.copyCode(onclick="toClipboard('appxml')") copy code
              div.boxcustom#appxml
                &lt;?xml version="1.0" encoding="UTF-8"?&gt;</br>&lt;application</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xmlns="http://www.simplity.org/schema"</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;applicationId="HelloWorld"</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;autoLoginUserId="100"</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jobsToRunOnStartup="batch"</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;logSqls="true"&gt;</br>&lt;/application&gt;</br>&nbsp;&nbsp;
              ul 
                li This is the root file of simplity which helps to configure various features of Simplity. Here <b>"applicationId"</b> is a mandatory field which represents the application name. applicationId should be a unique name for the application.
                li <b>NOTE:</b> To get more help, click ctrl + tab from the eclipse editor.
          </br>
          li Create Simplity batch under comp/batch as follows.
              div.stable1  
              ul.codeoptions1
                button.copyCode(onclick="toClipboard('batchxml')") copy code
              div.boxcustom#batchxml
                &lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt;</br>&lt;batch name="exampleBatch" xmlns="http://www.simplity.org/schema" defaultUserId="420"&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;jobs&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;job name="listener" serviceName="listenerService" nbrDedicatedThreads="1"&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;inputFields&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;inputField name="maxLoops" value="10" valueType="integer" /&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/inputFields&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/job&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;job name="interval" serviceName="intervalService" runInterval="6"&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;inputJson&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;![CDATA[{"f1" : true,"f2" : 128,"f3" : "2016-11-23"}]]&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/inputJson&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/job&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;job name="periodic" serviceName="periodicService" runAtTheseTimes="09:19, 09:52, 20:31, 20:34"&gt;&lt;/job&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/jobs&gt;</br>&lt;/batch&gt;</br></br> 
              ul
                li <b>nbrDedicatedThreads </b>- indicates the number of threads to run this job (based on the availability of threads).
                li <b>runInterval </b>- job runs at every given seconds.
                li <b>runAtTheseTimes </b>- job runs at given time(times-of-day).
                </br>
          li Example of <b>Interval Batch</b>
            ul
              li Create Simplity service under comp/service/tp as follows.
              li <b>runInterval</b> - used to implement the periodic batch
              div.stable1  
              ul.codeoptions1
                button.copyCode(onclick="toClipboard('internalbatchxml')") copy code
              div.boxcustom#internalbatchxml
                &lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;service</br>&nbsp;&nbsp;&nbsp;&nbsp;xmlns="http://www.simplity.org/schema"</br>&nbsp;&nbsp;&nbsp;&nbsp;name="intervalService"</br>&nbsp;&nbsp;&nbsp;&nbsp;dbAccessType="none"</br>&nbsp;&nbsp;&nbsp;&nbsp;description="This service is fired every so-many seconds by the batch manager.</br>&nbsp;&nbsp;&nbsp;&nbsp;But we can also use this service in any other context"</br>&nbsp;&nbsp;&nbsp;&nbsp;&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;actions&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;setValue</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fieldName="log"</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fieldValue="This is interval service starting its work" /&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;log names="log" /&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;logic</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;description="this logic is supplied as an example in core library sleeps for upto 10 seconds before saying hello"</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;className="org.simplity.ide.AsynchHelloWorld" /&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;setValue</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fieldName="log"</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fieldValue="Interval service completed its work" /&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;log names="log" /&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/actions&gt;</br>&lt;/service&gt;</br></br> 
              li This job runs at every 6 seconds
              </br>
          li Example of <b>Periodic Batch</b>
            ul
              li Create Simplity service under comp/service/tp as follows.
              li <b>runAtTheseTimes</b> - used to implement the interval batch
              div.stable1  
              ul.codeoptions1
                button.copyCode(onclick="toClipboard('periodicbatchxml')") copy code
              div.boxcustom#periodicbatchxml
                &lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;service</br>&nbsp;&nbsp;&nbsp;&nbsp;xmlns="http://www.simplity.org/schema"</br>&nbsp;&nbsp;&nbsp;&nbsp;name="periodicService"</br>&nbsp;&nbsp;&nbsp;&nbsp;dbAccessType="none"</br>&nbsp;&nbsp;&nbsp;&nbsp;description="This service is fired periodically, that is, at certain time-of-day"</br>&nbsp;&nbsp;&nbsp;&nbsp;&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;actions&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;setValue</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fieldName="log"</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fieldValue="This is PERIODIC service cranking-up" /&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;log names="log" /&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;logic</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;description="this logic is supplied as an example in core library sleeps for upto 10 seconds before saying hello"</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;className="org.simplity.ide.AsynchHelloWorld" /&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;setValue</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fieldName="log"</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fieldValue="PERIODIC service is done with" /&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;log names="log" /&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/actions&gt;</br>&lt;/service&gt;</br></br> 
              li This job runs at specified time of the day
              </br>
          li Example of <b>Listener Batch</b>
            ul
              li Create Simplity service under comp/service/tp as follows.
              div.stable1  
              ul.codeoptions1
                button.copyCode(onclick="toClipboard('listnerbatchxml')") copy code
              div.boxcustom#listnerbatchxml
                &lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;service</br>&nbsp;&nbsp;&nbsp;&nbsp;xmlns="http://www.simplity.org/schema"</br>&nbsp;&nbsp;&nbsp;&nbsp;name="periodicService"</br>&nbsp;&nbsp;&nbsp;&nbsp;dbAccessType="none"</br>&nbsp;&nbsp;&nbsp;&nbsp;description="This service is fired periodically, that is, at certain time-of-day"</br>&nbsp;&nbsp;&nbsp;&nbsp;&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;actions&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;setValue</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fieldName="log"</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fieldValue="This is PERIODIC service cranking-up" /&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;log names="log" /&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;logic</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;description="this logic is supplied as an example in core library sleeps for upto 10 seconds before saying hello"</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;className="org.simplity.ide.AsynchHelloWorld" /&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;setValue</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fieldName="log"</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fieldValue="PERIODIC service is done with" /&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;log names="log" /&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/actions&gt;</br>&lt;/service&gt;</br></br> 
              li This job runs at specified time of the day
              </br>
          li Create client(batchExample.html) as follows.
              div.stable1  
              ul.codeoptions1
                button.copyCode(onclick="toClipboard('batchexamplexml')") copy code
              div.boxcustom#batchexamplexml
                &lt;!DOCTYPE html&gt;</br>&lt;html&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;head&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script type="text/javascript" src="js/simplity.js"&gt;&lt;/script&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/head&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;body&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div id="response"&gt;&lt;/div&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;button onClick="getBatchStatus()"&gt;Get batch status&lt;/button&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;button onClick="startBatch()"&gt;Start batch status&lt;/button&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;button onClick="stopBatch()"&gt;Stop batch status&lt;/button&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;script type="text/javascript"&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function onSuccess(response) {</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;document.getElementById("response").innerHTML = JSON.stringify(response);</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function onError(response) {</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;document.getElementById("response").innerHTML = JSON.stringify(response);</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function getBatchStatus() {</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var data = "{'jobsAction':'status','jobsName':'exampleBatch','jobName':'periodicService'}";</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Simplity.getResponse("batch.exampleBatch", data, onSuccess, onError);</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function startBatch() {</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var data = "{'jobsAction':'start','jobsName':'exampleBatch','jobName':'periodicService'}";</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Simplity.getResponse("batch.exampleBatch", data, onSuccess, onError);</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function stopBatch() {</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var data = "{'jobsAction':'stop','jobsName':'exampleBatch','jobName':'periodicService'}";</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Simplity.getResponse("batch.exampleBatch", data, onSuccess, onError);</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/body&gt;</br>&lt;/html&gt;</br></br> 
                
include ../footer