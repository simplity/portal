include ../header
div.downloadsContainer
  div.downloadsInnerContainer
    div.downloadsHeader Simplity with Spring BOOT
    div.downloadsDesc Implementation of Simplity with Spring Boot.
    div.line
    div.releaseContainer
      div.accordian 
        div.accordianName Steps to create Simplity application with Spring Boot
      div.releaseInnerContainer
        div.releaseList1 1. Get simplity kernel
        div.line
        div.stable For Maven users-
        ul.codeoptions
          li Copy code
        div.box
          div.dependency &lt;dependency&gt; </br>&lt;groupId&gt;org.simplity&lt;groupId&gt; </br>&lt;artifactIdId&gt;simplity&lt;/artifactId&gt;</br>&lt;version&gt;1.2&lt;/version&gt;</br>&lt;/dependency&gt;
        div.stable Plain Java-
        ul.codeoptions
          li Copy code
        div.box
          div.dependency &lt;dependency&gt; </br>&lt;groupId&gt;org.simplity&lt;/groupId&gt; </br>&lt;artifactIdId&gt;simplity&lt;/artifactId&gt;</br>&lt;version&gt;1.2&lt;/version&gt;</br>&lt;/dependency&gt;
        div.releaseList1 2. Creating project and Configuration
        div.line
        ul.creationSteps
          li Create a new "Maven Project" in eclipse
          li Create component folder structure under resources as follows:
              div.boxcustom
                <ul><li>comp<ul><li>dt</li><li>msg</li><li>openapi</li><li>rec</li><li>service<ul style='list-style-type:circle'><li>tp</li></ul></li><li>sql</li></ul></li></ul></br>
            
          li Configure application.xml under resources/comp as follows.
            div
              div.stable1    
              ul.codeoptions1
                li Copy code
              div.boxcustom
                &lt;?xml version="1.0" encoding="UTF-8"?&gt;</br>&lt;application</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xmlns="http://www.simplity.org/schema"</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;applicationId="ContractService"</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;autoLoginUserId="100"</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;logSqls="true"&gt;</br>&lt;/application&gt;</br>&nbsp;&nbsp;
              ul 
                li This is the root file of simplity which helps to configure various features of Simplity. Here <b>"applicationId"</b> is a mandatory field which represents the application name. applicationId should be a unique name for the application.
                li <b>NOTE:</b> To get more help, click ctrl + tab from the eclipse editor.
          li Create Open API under resources/comp/openapi as follows.
            div
              div.stable1    
              ul.codeoptions1
                li Copy code
              div.boxcustom
                {</br>&nbsp;&nbsp;&nbsp;&nbsp;"swagger": "2.0",</br>&nbsp;&nbsp;&nbsp;&nbsp;"info": {</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"description": "",</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"version": "2.0",</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"title": "org.simplity.apiscdb"</br>&nbsp;&nbsp;&nbsp;&nbsp;},</br>&nbsp;&nbsp;&nbsp;&nbsp;"host": "localhost:8070",</br>&nbsp;&nbsp;&nbsp;&nbsp;"basePath": "/app/openapi",</br>&nbsp;&nbsp;&nbsp;&nbsp;"schemes": [  "http"  ],</br>&nbsp;&nbsp;&nbsp;&nbsp;"consumes": [  "application/json"  ],</br>&nbsp;&nbsp;&nbsp;&nbsp;"produces": [  "application/json"  ],</br>&nbsp;&nbsp;&nbsp;&nbsp;"paths": {</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"/contract": {</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"get": {</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"tags": [  "contract"  ],</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"operationId": "contractFind",</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"summary": "contractFind",</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"description":"",</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"deprecated": false,</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"responses": {</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"200": {</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"description": "List of contracts",</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"schema": {</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"$ref": "#/definitions/ContractHeaders"</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</br>&nbsp;&nbsp;&nbsp;&nbsp;},</br>&nbsp;&nbsp;&nbsp;&nbsp;"definitions": {</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"ContractHeaders": {</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"type": "object",</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"x-fieldName": "ContractHeaders",</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"properties": {</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"contractHeaders": {</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"type": "array",</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"items": {</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"$ref": "#/definitions/ContractHeader"</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"ContractHeader": {</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"type": "object",</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"properties": {</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"bpContractNum": {</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"type": "string"</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"description": {</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"type": "string"</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"assetName": {</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"type": "string"</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"ErrorResponse": {</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"x-fieldName": "ErrorResponse",</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"type": "object",</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"properties": {</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"message": {</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"type": "string"</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</br>&nbsp;&nbsp;&nbsp;&nbsp;}</br>}</br></br> 
              ul
                li <b>host</b> : host name and port number
                li <b>basePath</b> : path to be appended with host
                li <b>operationId</b> : Simplity service name
                li For more details, refer the <b>"<u>https://swagger.io/</u>"</b>
          li Create Simplity record under resources/comp/rec as follows.
            div
              div.stable1    
              ul.codeoptions1
                li Copy code
              div.boxcustom
                &lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt;</br>&lt;record name="ContractHeader" </br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;recordType="storage"</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tableName="CONTRACTHEADER"</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keyToBeGenerated="false"</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;okToSelectAll="true"</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xmlns="http://www.simplity.org/schema"&gt;</br>&nbsp;&nbsp;&lt;fields&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;field columnName="BP_CONTRACT_NUM" dataType="_text" fieldType="primaryKey" name="bpContractNum" &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sqlTypeName="VARCHAR"/&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;field columnName="DESCRIPTION" dataType="_text" fieldType="data" name="description" sqlTypeName="VARCHAR"/&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;field columnName="ASSET_NAME" dataType="_text" fieldType="data" name="assetName" sqlTypeName="VARCHAR"/&gt;</br>&nbsp;&nbsp;&lt;/fields&gt;</br>&lt;/record&gt;</br></br> 
              ul
                li Simplity records are kept under the comp/rec folder. This is the main part of data model. Data structures that are used as input to, or output from a service are modeled as records. Following are the fields of simplity record:
                li <b>name (mandatory field) </b>- name of the record or entity
                li <b>moduleName (optional field) </b>- sub-folder name inside rec folder. In this example(rec/login/user.xml) record name is user.xml and module name login.
                li <b>recordType (mandatory field) </b>- STORAGE (represents a row of a table being stored in an rdbms), VIEW (a view involving one or more storage records), STRUCTURE (record structure used by the application, but is not linked to any stored data).
                li <b>tableName (optional field) </b>- name of the db table, if recordType is STORAGE or VIEW.
                li <b>keyToBeGenerated (optional field) </b>- true/false (if any table column value to be generated automatically)
                li <b>okToSelectAll (optional field) </b>- true/false(set true to select all rows from the table)
          li Create Simplity service under resources/comp/service/tp as follows.
            div
              div.stable1    
              ul.codeoptions1
                li Copy code
              div.boxcustom
                &lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt;</br>&lt;service xmlns="http://www.simplity.org/schema" </br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name="contractFind" </br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dbAccessType="readOnly"&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;actions&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;filter filterRecordName="filteredContractHeaders" outputSheetName="contractHeaders"&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/filter&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;log names="contractHeaders"/&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/actions&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;outputData&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;outputRecords&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;outputRecord sheetName="contractHeaders" /&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/outputRecords&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/outputData&gt;</br>&lt;/service&gt;</br></br> 
          
        div.releaseList1 3. Write Spring Boot main program
        div.line
        ul.creationSteps
          li Write Java program and integrate spring boot,
            div
              div.stable1    
              ul.codeoptions1
                li Copy code
              div.boxcustom
                </br>import java.io.File;</br>import org.simplity.kernel.Application;</br>import org.simplity.rest.Operations;</br>import org.slf4j.Logger;</br>import org.slf4j.LoggerFactory;</br>import org.springframework.boot.SpringApplication;</br>import org.springframework.boot.autoconfigure.EnableAutoConfiguration;</br>import org.springframework.boot.autoconfigure.web.DispatcherServletAutoConfiguration;</br>import org.springframework.boot.web.servlet.ServletRegistrationBean;</br>import org.springframework.context.annotation.Bean;</br>import org.springframework.context.annotation.ComponentScan;</br>import org.springframework.context.annotation.Configuration;</br>import org.springframework.web.servlet.DispatcherServlet;</br></br>@Configuration</br>@ComponentScan</br>@EnableAutoConfiguration</br>public class App {</br>&nbsp;&nbsp;&nbsp;&nbsp;final static Logger logger = LoggerFactory.getLogger(App.class);</br></br>&nbsp;&nbsp;&nbsp;&nbsp;@Bean</br>&nbsp;&nbsp;&nbsp;&nbsp;public DispatcherServlet dispatcherServlet() {</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return new DispatcherServlet();</br>&nbsp;&nbsp;&nbsp;&nbsp;}</br></br>&nbsp;&nbsp;&nbsp;&nbsp;@Bean</br>&nbsp;&nbsp;&nbsp;&nbsp;public ServletRegistrationBean dispatchServletRegistration() {</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ServletRegistrationBean registration = new ServletRegistrationBean(dispatcherServlet(), "/*");</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;registration.setName(DispatcherServletAutoConfiguration.DEFAULT_DISPATCHER_SERVLET_REGISTRATION_BEAN_NAME);</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return registration;</br>&nbsp;&nbsp;&nbsp;&nbsp;}</br></br>&nbsp;&nbsp;&nbsp;&nbsp;@Bean</br>&nbsp;&nbsp;&nbsp;&nbsp;public ServletRegistrationBean servletRegistrationBean() {</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ServletRegistrationBean registration =  new ServletRegistrationBean(new org.simplity.rest.Serve(), "/app/*");</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;registration.setName("RestSimplity");</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return registration;</br>&nbsp;&nbsp;&nbsp;&nbsp;}</br></br>&nbsp;&nbsp;&nbsp;&nbsp;public static void main(String[] args) throws Exception {</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;File jarPath = new File(App.class.getProtectionDomain().getCodeSource().getLocation().getPath());</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String folder = jarPath.getParent() + File.separator + "classes/comp" + File.separator;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Application.bootStrap(folder);</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Operations.loadAll(folder + "/openapi/");</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch (Exception e) {</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;logger.error("error while bootstrapping with compFolder=" + folder, e);</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SpringApplication.run(App.class, args);</br>&nbsp;&nbsp;&nbsp;&nbsp;}</br>}</br></br>
        
        div.releaseList1 3. Run Spring Boot application
        div.line
        ul.creationSteps
          li In eclipse, right-click on the project --> Run As --> Java Application (Select App.java as Main program)
          li Enter the below URL from the web browser,
            div
              div.stable1    
              ul.codeoptions1
                li Copy code
              div.boxcustom
                "http://localhost:8070/ContractService/app/openapi/contract/"</br></br> 
              ul 
                li <b>Note : </b> 
                  ul
                    li ContractService - application name.
                    li /app/openapi - basePath.
                    li /contract - path to the particular service.
                
include ../footer