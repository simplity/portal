include ../header
script(src='../../js/home.js')
div.downloadsContainer
  div.downloadsInnerContainer
    div.downloadsHeader Plain Web Services
    div.downloadsDesc Simplity offers in-built web services. You can directly call the Simplity services by using this web service.
    div.line
    div.releaseContainer
      div.accordian 
        div.accordianName Steps to create Plain Web Service using Simplity
      div.releaseInnerContainer
        div.releaseList1 1. Get simplity kernel
        div.line
        div.stable For Maven users-
        ul.codeoptions
          button.copyCode(onclick="toClipboard('dependency1')") copy code
        div.box
          div.dependency#dependency1 &lt;dependency&gt; </br>&lt;groupId&gt;org.simplity&lt;groupId&gt; </br>&lt;artifactIdId&gt;simplity&lt;/artifactId&gt;</br>&lt;version&gt;1.2&lt;/version&gt;</br>&lt;/dependency&gt;
        div.stable Plain Java-
        ul.codeoptions
          button.copyCode(onclick="toClipboard('dependency2')") copy code
        div.box
          div.dependency#dependency2 &lt;dependency&gt; </br>&lt;groupId&gt;org.simplity&lt;/groupId&gt; </br>&lt;artifactIdId&gt;simplity&lt;/artifactId&gt;</br>&lt;version&gt;1.2&lt;/version&gt;</br>&lt;/dependency&gt;
        div.releaseList1 2. Creating project
        div.line
        ul.creationSteps
          li Create a new "Maven Project" in eclipse
          li Configure web.xml to have the following entry
            div
              div.stable1    
              ul.codeoptions1
                button.copyCode(onclick="toClipboard('webxml')") copy code
              div.boxcustom#webxml
                &lt;servlet&gt;</br>&nbsp;&nbsp;&lt;servlet-name&gt;SimplityStartup&lt;/servlet-name&gt;</br>&nbsp;&nbsp;&lt;servlet-class&gt;org.simplity.http.Startup&lt;/servlet-class&gt;</br>&nbsp;&nbsp;&lt;load-on-startup&gt;1&lt;/load-on-startup&gt;</br>&lt;/servlet&gt;</br>&lt;servlet&gt;</br>&nbsp;&nbsp;&lt;servlet-name&gt;s&lt;/servlet-name&gt;</br>&nbsp;&nbsp;&lt;servlet-class&gt;org.simplity.http.Serve&lt;/servlet-class&gt;</br>&lt;/servlet&gt;</br>&lt;servlet-mapping&gt;</br>&nbsp;&nbsp;&lt;servlet-name&gt;s&lt;/servlet-name&gt;</br>&nbsp;&nbsp;&lt;url-pattern&gt;*._s&lt;/url-pattern&gt;</br> &lt;/servlet-mapping&gt;</br></br>
        
        div.releaseList1 3. Application Configuration
        div.line
        ul.creationSteps
          li Create component folder structure under WEB-INF as follows:
              div.boxcustom
                <ul><li>api</li><li>comp<ul><li>dt</li><li>msg</li><li>rec</li><li>service<ul style='list-style-type:circle'><li>tp</li></ul></li><li>sql</li></ul></li></ul></br>
            
          li Configure application.xml under WEB-INF/comp as follows.
            div
              div.stable1    
              ul.codeoptions1
                button.copyCode(onclick="toClipboard('appxml')") copy code
              div.boxcustom#appxml
                &lt;?xml version="1.0" encoding="UTF-8"?&gt;</br>&lt;application</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xmlns="http://www.simplity.org/schema"</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;applicationId="HelloWorld"</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;autoLoginUserId="100"</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;logSqls="true"&gt;</br>&lt;/application&gt;</br>&nbsp;&nbsp;
              ul 
                li This is the root file of simplity which helps to configure various features of Simplity. Here <b>"applicationId"</b> is a mandatory field which represents the application name. applicationId should be a unique name for the application.
                li <b>NOTE:</b> To get more help, click ctrl + tab from the eclipse editor.

          li Create Simplity service under WEB-INF/comp/service/tp as follows.
            div
              div.stable1    
              ul.codeoptions1
                button.copyCode(onclick="toClipboard('mywebservicexml')") copy code
              div.boxcustom#mywebservicexml
                &lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt;</br>&lt;service xmlns="http://www.simplity.org/schema"</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name="myWebService" </br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dbAccessType="none"&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;actions&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;setValue fieldName="hello" fieldValue="from within restService Hello World!"&gt;&lt;/setValue&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/actions&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;outputData fieldNames="hello"&gt;&lt;/outputData&gt;</br>&lt;/service&gt;</br></br> 
        
        div.releaseList1 3. Invoke Simplity Web Service
        div.line
        ul.creationSteps
          li Enter the below URL from the web browser,
            div
              div.stable1    
              ul.codeoptions1
                button.copyCode(onclick="toClipboard('weburl')") copy code
              div.boxcustom#weburl
                "http://localhost:8080/helloworld/a._s?_serviceName=myWebService"</br></br> 
              ul 
                li <b>Note : </b> 
                  ul
                    li helloworld - application name.
                    li myWebService - simplity service name.
          
        
        div.releaseList1 4. Simplity Web Service client
        div.line
        ul.creationSteps
          li Simplity also provides web service client and it can be achieved using httpClient tag.
          li Create Simplity client as follows.
            div
              div.stable1    
              ul.codeoptions1
                button.copyCode(onclick="toClipboard('simplitywebservicexml')") copy code
              div.boxcustom#simplitywebservicexml
                &lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt;</br>&lt;service xmlns="http://www.simplity.org/schema"</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name="simplityWebService" </br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dbAccessType="none"&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;actions&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;httpClient httpMethod="GET" urlString="http://localhost:8080/helloworld/a._s?_serviceName=helloworld" </br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;contentType="application/json" responseFieldName="hello"&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/httpClient&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;log names="hello" /&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;setValue fieldName="hello" expression="concat('from simplityWebService: ',hello)"&gt;&lt;/setValue&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;/actions&gt;</br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;outputData fieldNames="hello"&gt;&lt;/outputData&gt;</br>&lt;/service&gt;</br></br> 
                
          li Invoke Simplity service using javascript as follows.
            div
              div.stable1    
              ul.codeoptions1
                button.copyCode(onclick="toClipboard('clientcode')") copy code
              div.boxcustom#clientcode
                function callWebservice() {</br>&nbsp;&nbsp;&nbsp;&nbsp;Simplity.getResponse("simplityWebService", null, onSuccess, onError);</br>}</br></br>function onSuccess(response) {</br>&nbsp;&nbsp;&nbsp;&nbsp;//display the response;</br>}</br></br>function onError(response) {</br>&nbsp;&nbsp;&nbsp;&nbsp;//display the error message;</br>}</br></br> 
                
include ../footer